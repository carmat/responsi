/* Responsive Grid

A customisable, yet responsible, responsive CSS grid built in SCSS.

@usage:
```
    <h2>2 columns</h2>
    <div class="grid">
        <div class="g-col__6-12"> 50% </div>
        <div class="g-col__6-12"> 50% </div>
    </div>
```

The maths...
    c => column width
    g => gutter width
    n => number of columns => $responsi-columns

    W => max-width => 100%

    W = n*c + (n-1)*g
*/
$responsi-columns: 12 !default;
$responsi-gutter: 2.5% !default; // .5rem @ 320px
$breakpoints: 480, 768, 960 !default;

// Private grid variables based on user-available variables
$__single-column-width: ( ( 100% - ($responsi-gutter * ($responsi-columns - 1)) ) / $responsi-columns );
$__smallest-breakpoint: min($breakpoints...);

.grid {
    display: block;

    &:after {
        content: '';
        display: table;
        clear: both;
    }
}

[class*="g-col__"] {
    float: left;
    width: 100%;
    box-sizing: border-box;

    & + & {
        margin-top: $responsi-gutter;
    }
}

@media only screen and (min-width: #{$__smallest-breakpoint}px) {
    [class*="g-col__"] + [class*="g-col__"] {
        margin-top: 0;
        margin-left: $responsi-gutter;
    }

    @for $col from 1 through $responsi-columns {
        .g-col__#{$col}-#{$responsi-columns} {
            width: ( $__single-column-width * $col ) + ( $responsi-gutter * ($col - 1) );
        }
    }
}
